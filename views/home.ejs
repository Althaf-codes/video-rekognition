<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Upload to S3</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
</head>
<style>
  body {
    background-color: black;

    margin: 0;
    padding: 0;
    
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #centered-div {
    margin:100px;
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    text-align: center;
  }

  #countdown {
      font-size: 24px;
      margin-bottom: 20px;
    }

    #text-container {
      display: none;
      margin-top: 20px;
    }

</style>
<body>
 
<div id="centered-div">


  <h2>Content Moderation from Video</h2>

  <form id="uploadForm" action="/api/uploads" method="post" enctype="multipart/form-data">
    <input type="file" name="file" id='videoUpload' />
    <button class="btn btn-dark" type="submit">Upload</button>
  </form>

<br>
<% if (locals.ObjectKey) { %>
 <h5  class="text-left font-weight-bold ">The Received Object-Key : </h5>
 
 <p class="text-center font-weight-normal"><%=ObjectKey%></p>
<% } %>

  <br>

<form action="/api/startAnalyze" method="POST">
    <input type="text" name="ObjectKey" placeholder="Enter your ObjectKey"/>

    <input class="btn btn-dark" type="submit" value="Start Video Analyzing"/>
</form>


  <!-- <button  onclick=startAnalyzeData()>Start Video Analyzing</button> -->


  <div> <br> </div>
  <% if (locals.jobId) { %>

 <h5  class="text-left font-weight-bold ">The Received Job-ID : </h5> 
 <p class="text-center font-weight-normal"><%=jobId%></p>

    
  <% } %>
  <div> <br> </div>


  <% if (locals.presignedUrl) { %>
    <video id="myVideo" width="400" height="400" controls autoplay >
      <source src="<%=presignedUrl%>" type="video/mp4">    
      Your browser does not support the video tag.
    </video>
    <div> <br> </div>
    <div id="countdown">Wait For: <span id="timer">10</span> seconds</div>
    <div> <br> </div>
  <% } %>
  
  <div id="text-container">
    <h2>Now Proceed to Analyze Result</h2>
  </div>


  <% if (locals.presignedUrl) { %>

    <form action="/api/GetAnalyzeResult" method="POST">
      <input type="text" name="RequestToken" placeholder="Enter your Unique Key"/>
      
      <input type="text" name="JobId" placeholder="Enter your JobId"/>
  
      <input type="hidden" value="<%=presignedUrl%>" name="presignedUrl"/>
  
      <input class="btn btn-dark" type="submit" value="Get Analyzed Result"/>
  </form>
  <% } else{ %>  
  
    <form action="/api/GetAnalyzeResult" method="POST">
      <input type="text" name="RequestToken" placeholder="Enter your Unique Key"/>
      
      <input type="text" name="JobId" placeholder="Enter your JobId"/>
    
      <input class="btn btn-dark" type="submit" value="Get Analyzed Result"/>
  </form>
 <% } %>

   
   

 


  <!-- <button onclick=getAnalyzeData()>Get Video Analyzing</button> -->

  <div> <br> </div>
  <!-- <button formaction="/api/dummy" formmethod="get" type="submit">Fetch Data</button> -->
  



<!--   
  <button onclick="seekToTime(3)">Timestamp 1</button>
  <button onclick="seekToTime(6)">Timestamp 2</button>
  <button onclick="seekToTime(9)">Timestamp 3</button> -->

  <br>

  

  <% if (locals.error) { %>

    <div class="alert alert-danger" role="alert">
      <%= error %>
    </div>

  <% } %>

  <% if (locals.fileUploaded) { %>

    <div class="alert alert-success" role="alert">
      File Uploaded Successfully
    </div>

  <% } %>

  <h2>Analysis Results</h2>
  <br>

  <% if (locals.AnalyserResult) { %>
   <h5> Analysed Result : <%=AnalyserResult%></h5>
   <br>
  <% } %>

  <% if (locals.data) { %>
    <table class="table">
      <thead class="thead-dark">
        <tr>
          <th scope="col">S.No</th>
          <th scope="col">Name</th>
          
          <th scope="col">Confidence</th>
          <th scope="col">Timestamp</th>
        </tr>
       
      </thead>
      <tbody>
        <% data.forEach((entry,index) => { %>
          <tr>
            <th scope="row"><%= index+1 %></th>
            <td><%= entry.ModerationLabel.Name %></td>
           
            <td><%= entry.ModerationLabel.Confidence %></td>
            <td>

              <button type="button" onclick="seekToTime('<%=entry.Timestamp%>')" class="btn btn-success"><%= entry.Timestamp%></button>
              
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  <% } else { %>
    <p>No data available for analysis.</p>
  <% } %>

</div>

 

<!-- <script type=text/javascript language="javascript" src="../main.js">  </script> -->


<script>
  // document.getElementById("videoUpload").onchange = function(event) {
  //   let file = event.target.files[0];
  //   let blobURL = URL.createObjectURL(file);
  //   document.getElementById("myVideo").style.display = 'block';
  //   document.getElementById("myVideo").src = blobURL;
  // }
  
  

  document.addEventListener('DOMContentLoaded', function () {
      const countdownElement = document.getElementById('countdown');
      const timerElement = document.getElementById('timer');
      const textContainer = document.getElementById('text-container');
      let countdown = 10;

      function updateCountdown() {
        timerElement.textContent = countdown;
        countdown--;

        if (countdown < 0) {
          clearInterval(timerInterval);
          hideTimer();
          showText();
        }
      }

      function hideTimer() {
        countdownElement.style.display = 'none';
      }

      function showText() {
        textContainer.style.display = 'block';
      }

      const timerInterval = setInterval(updateCountdown, 1000);
    });





  function seekToTime(time) {
    const video = document.getElementById('myVideo');
    const seconds = Math.floor((time / 1000) % 60);

    video.currentTime = seconds;
    video.play();
  }

 async function startAnalyzeData(objKey){
    console.log('Analyze Function Invoked');
   
   await fetch(" http://localhost:3000/api/startAnalyze",{
      method: 'POST',
      headers:{ 
        "Content-Type": "application/json"
      },
      body:JSON.stringify({"ObjectKey":objKey})
      
    });
  }
  async function getAnalyzeData(){
    console.log('Analyze Function Invoked');
    const JobId = "6d353bf218d93bb6fee0b072d7f453b99126298790e4839451349ec7f7d4099b";
   await fetch(" http://localhost:3000/api/GetAnalyzeResult",{
      method: 'POST',
      headers:{
        "Content-Type": "application/json"
      },
      body:JSON.stringify({"JobId":JobId})
      
    });
  }
  async function fetchdummyData(){
    console.log('fetchdummyData Function Invoked');
   await fetch(" http://localhost:3000/api/dummy",{
      method: 'GET',
      headers:{
        "Content-Type": "application/json"
      },
     
    });
  }
</script>
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>
</html>
